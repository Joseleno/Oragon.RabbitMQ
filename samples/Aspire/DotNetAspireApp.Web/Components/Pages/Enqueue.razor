@page "/enqueue"
@using DotNetAspireApp.Common.Messages.Commands
@* @attribute [StreamRendering(true)] *@
@rendermode InteractiveServer
@* @attribute [OutputCache(Duration = 5)] *@

@inject BackendApiClient api

<PageTitle>enqueue</PageTitle>

<h1>enqueue</h1>

<p>This component demonstrates showing data loaded from a backend API service.</p>

<p>
    <RadzenSlider @bind-Value=@TotalItemsToSend TValue="int" Min="1" Max="10000" Style="width:100%" />
</p>

<p>
    <label>
        Id
        <input @bind="Message" />
    </label>
    <button @onclick="UpdateHeading">
        Enviar @TotalItemsToSend mensagens
    </button>
</p>

@code {
    int TotalItemsToSend = 1;

    private string Message = string.Empty;


    private async Task UpdateHeading()
    {
        string message = this.Message;
        int totalItensToSend = this.TotalItemsToSend;

        await api.EnqueueAsync(new DoSomethingRequest(totalItensToSend, $"Mensagem {{message}} ({{index}} de {totalItensToSend})")).ConfigureAwait(false);

        this.Message = string.Empty;
    }

}
